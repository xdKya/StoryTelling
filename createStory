<DropDownPicker
                  items={[
                    { label: "Imagem 1", value: "image_1" },
                    { label: "Imagem 2", value: "image_2" },
                    { label: "Imagem 3", value: "image_3" },
                    { label: "Imagem 4", value: "image_4" },
                    { label: "Imagem 5", value: "image_5" },
                  ]}
                  defaultValue={this.state.previewImage}
                  containerStyle={{
                    height: 40,
                    borderRadius: RFValue(20),
                    marginBottom: RFValue(20),
                    marginHorizontal: RFValue(10),
                  }}
                  onOpen={() => {
                    this.setState({ dropdownHeight: 170 });
                  }}
                  onClose={() => {
                    this.setState({ dropdownHeight: 40 });
                  }}
                  style={{ backgroundColor: "transparent" }}
                  itemStyle={{
                    justifyContent: "center",
                  }}
                  dropDownStyle={{
                   "#2f345d",
                  }}
                  labelStyle={
                     styles.dropdownLabel
                  }
                  arrowStyle={
                    
                       styles.dropdownLabel
                  }
                  onChangeItem={(item) =>
                    this.setState({
                      previewImage: item.value,
                    })
                  }
                />
              </View>
              <View style={{ marginHorizontal: RFValue(10) }}>
                <TextInput
                  style={
                    
                      styles.inputFont
                  }
                  onChangeText={(title) => this.setState({ title })}
                  placeholder={"Título"}
                  placeholderTextColor={
                     "white"
                  }
                />
                <TextInput
                  style={[
                    this.state.light_theme
                      ? styles.inputFontLight
                      : styles.inputFont,
                    styles.inputFontExtra,
                    styles.inputTextBig,
                  ]}
                  onChangeText={(description) => this.setState({ description })}
                  placeholder={"Descrição"}
                  multiline={true}
                  numberOfLines={4}
                  placeholderTextColor={
                     "white"
                  }
                />
                <TextInput
                  style={[
                    this.state.light_theme
                      ? styles.inputFontLight
                      : styles.inputFont,
                    styles.inputFontExtra,
                    styles.inputTextBig,
                  ]}
                  onChangeText={(story) => this.setState({ story })}
                  placeholder={"História"}
                  multiline={true}
                  numberOfLines={20}
                  placeholderTextColor={
                    "white"
                  }
                />
                <TextInput
                  style={[
                    this.state.light_theme
                      ? styles.inputFontLight
                      : styles.inputFont,
                    styles.inputFontExtra,
                    styles.inputTextBig,
                  ]}
                  onChangeText={(moral) => this.setState({ moral })}
                  placeholder={"Moral da História"}
                  multiline={true}
                  numberOfLines={4}
                  placeholderTextColor={
                     "white"
                  }
                />
              </View>
              <View style={styles.submitButton}>
                <Button
                  title="Enviar"
                  color="#841584"
                />
              </View>
              
              
              
              const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#15193c",
  },
 
  droidSafeArea: {
    marginTop:
      Platform.OS === "android" ? StatusBar.currentHeight : RFValue(35),
  },
  appTitle: {
    flex: 0.07,
    flexDirection: "row",
  },
  appIcon: {
    flex: 0.3,
    justifyContent: "center",
    alignItems: "center",
  },
  iconImage: {
    width: "100%",
    height: "100%",
    resizeMode: "contain",
  },
  appTitleTextContainer: {
    flex: 1,
    justifyContent: "center",
  },
  appTitleText: {
    color: "white",
    fontSize: RFValue(28),
    fontFamily: "Bubblegum-Sans",
    textAlign: "center",
  },
 
  fieldsContainer: {
    flex: 0.85,
  },
  previewImage: {
    width: "93%",
    height: RFValue(250),
    alignSelf: "center",
    borderRadius: RFValue(10),
    marginVertical: RFValue(10),
    resizeMode: "contain",
  },
  inputFont: {
    height: RFValue(40),
    borderColor: "white",
    borderWidth: RFValue(1),
    borderRadius: RFValue(10),
    paddingLeft: RFValue(10),
    color: "white",
    fontFamily: "Bubblegum-Sans",
  },
  
  dropdownLabel: {
    color: "white",
    fontFamily: "Bubblegum-Sans",
  },
  
  inputFontExtra: {
    marginTop: RFValue(15),
  },
  inputTextBig: {
    textAlignVertical: "top",
    padding: RFValue(5),
  },
  submitButton: {
    marginTop: RFValue(20),
    alignItems: "center",
    justifyContent: "center",
  },
});
              
